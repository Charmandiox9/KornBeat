version: "3.9"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: mydatabase
    volumes:
      - mongo-data:/data/db
      - mongodb_config:/data/configdb
      - ./databases/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass redis_password
    volumes:
      - redis-data:/data
      - ./databases/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3001
      # CAMBIO AQUÍ: mydatabase → music_app
      - MONGODB_URI=mongodb://admin:admin123@mongodb:27017/music_app?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - JWT_SECRET=your_jwt_secret
      - JWT_EXPIRES_IN=15m
      - REFRESH_TOKEN_EXPIRES_IN=7d
    ports:
      - "3001:3001"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  music-service:
    build:
      context: ./services/music-service
      dockerfile: Dockerfile
    container_name: music-service
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      # CAMBIO AQUÍ: mydatabase → music_app
      - MONGODB_URI=mongodb://admin:admin123@mongodb:27017/music_app?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis_password
      - EXTERNAL_API_URL=https://api.example.com
      - EXTERNAL_API_KEY=your_api_key_here
    ports:
      - "3002:3002"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile  # Nuevo Dockerfile para nginx con frontend integrado
    container_name: auth_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - auth-service
    networks:
      - app-network

volumes:
  mongo-data:
  mongodb_config:
  redis-data:

networks:
  app-network:
    driver: bridge
