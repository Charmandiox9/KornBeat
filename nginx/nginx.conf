user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    client_max_body_size 100M;
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=music:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=music_strict:10m rate=10r/s;
    
    # Upstream para auth service
    upstream auth_service {
        server auth-service:3001;
    }
    
    # Upstream para music service
    upstream music_service {
        server music-service:3002;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Cabeceras de seguridad
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Frontend React - servir archivos estáticos
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # ============= AUTH SERVICE =============
        location /api/auth/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://auth_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # ============= MUSIC SERVICE =============
        
        # Obtener canción individual (cacheable)
        location ~ ^/api/music/songs/([0-9a-f]+)$ {
            limit_req zone=music burst=20 nodelay;
            
            proxy_pass http://music_service/music/songs/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            
            # Cache para canciones individuales
            proxy_cache_valid 200 1h;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Búsqueda de canciones
        location /api/music/songs/search {
            limit_req zone=music burst=15 nodelay;
            
            proxy_pass http://music_service/music/songs/search;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Canciones populares (alto cacheo)
        location /api/music/songs/popular {
            limit_req zone=music burst=20 nodelay;
            
            proxy_pass http://music_service/music/songs/popular;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Canciones recientes
        location /api/music/songs/recent {
            limit_req zone=music burst=20 nodelay;
            
            proxy_pass http://music_service/music/songs/recent;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Canciones por categoría
        location ~ ^/api/music/songs/category/(.+)$ {
            limit_req zone=music burst=20 nodelay;
            
            proxy_pass http://music_service/music/songs/category/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Letra de canción
        location ~ ^/api/music/songs/([0-9a-f]+)/lyrics$ {
            limit_req zone=music burst=10 nodelay;
            
            proxy_pass http://music_service/music/songs/$1/lyrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Estadísticas de canción
        location ~ ^/api/music/songs/([0-9a-f]+)/stats$ {
            limit_req zone=music burst=10 nodelay;
            
            proxy_pass http://music_service/music/songs/$1/stats;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Registrar reproducción (requiere auth, rate limit más estricto)
        location ~ ^/api/music/songs/([0-9a-f]+)/play$ {
            limit_req zone=music_strict burst=5 nodelay;
            
            proxy_pass http://music_service/music/songs/$1/play;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Like/Unlike (requiere auth)
        location ~ ^/api/music/songs/([0-9a-f]+)/like$ {
            limit_req zone=music_strict burst=5 nodelay;
            
            proxy_pass http://music_service/music/songs/$1/like;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "POST, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Historial del usuario
        location /api/music/user/recent {
            limit_req zone=music burst=10 nodelay;
            
            proxy_pass http://music_service/music/user/recent;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Canciones con like del usuario
        location /api/music/user/liked {
            limit_req zone=music burst=10 nodelay;
            
            proxy_pass http://music_service/music/user/liked;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Ruta de administración (sincronizar contadores)
        location /api/music/admin/sync-counters {
            # Rate limit muy estricto para rutas admin
            limit_req zone=music_strict burst=2 nodelay;
            
            # TODO: Agregar autenticación de admin aquí
            # deny all; # Descomentar para bloquear en producción
            
            proxy_pass http://music_service/music/admin/sync-counters;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Authorization $http_authorization;
            
            # CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Health check general
        location /health {
            add_header Content-Type application/json;
            return 200 '{"status":"OK","service":"gateway"}';
        }
        
        # Health check del music service
        location /api/music/health {
            proxy_pass http://music_service/health;
            proxy_set_header Host $host;
            
            add_header Access-Control-Allow-Origin * always;
        }
        
        # Error handling
        error_page 404 = @not_found;
        error_page 502 503 504 = @service_error;
        
        location @not_found {
            add_header Content-Type application/json always;
            return 404 '{"error":"Resource not found"}';
        }
        
        location @service_error {
            add_header Content-Type application/json always;
            add_header Retry-After 30;
            return 503 '{"error":"Service temporarily unavailable","retry_after":30}';
        }
    }
}